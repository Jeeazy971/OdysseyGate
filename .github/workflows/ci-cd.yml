name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop

jobs:
   ci:
    name: CI Pipeline
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout du code source
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configuration de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Installation des dépendances
      - name: Install dependencies
        run: npm install

      # 4. Lancer les tests unitaires
      - name: Run tests
        run: npm run test

      # 5. Lancer le lint
      - name: Lint code
        run: eslint --config .eslintrc.js "{src,apps,libs,test}/**/*.ts" --fix

      # 6. Effectuer un build
      - name: Build application
        run: npm run build

   cd:
    name: CD Pipeline (Deploy)
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      # 1. Checkout du code source
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configuration de Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Déploiement Docker (commenté pour le moment)
      # - name: Log in to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and push Docker image
      #   run: |
      #     docker build -t your-dockerhub-username/odyssey-gate-backend:latest .
      #     docker push your-dockerhub-username/odyssey-gate-backend:latest
